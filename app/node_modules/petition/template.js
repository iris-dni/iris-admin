import * as React from 'react';
import nunjucks from 'nunjucks';
import Alert from 'components/alert';
import { translate } from 'config/strings';

export default React.createClass({
  displayName: 'Template',

  propTypes: {
    context: React.PropTypes.object,
    url: React.PropTypes.string.isRequired
  },

  getInitialState() {
    return {
      init: true,
      template: null
    };
  },

  componentWillMount() {
    this.loadTemplate(this.props.url);
  },

  componentWillReceiveProps(nextProps) {
    if (this.props.url !== nextProps.url) {
      this.loadTemplate(nextProps.url);
    }
  },

  loadTemplate(url) {
    const env = new nunjucks.Environment(new nunjucks.WebLoader('.', {async: true}));
    env.getTemplate(url, true, (err, tmpl) => {
      this.setState({
        init: false,
        template: tmpl
      });
    });
  },

  render() {
    const { init, template } = this.state;

    if (!init && !template) {
      return (
        <div className="container-fluid">
          <Alert message={translate('nunjucks.errors.missing-template')} />
        </div>
      );
    }

    let html;
    if (template) {
      html = template.render(this.props.context);
    }

    return (
      // eslint-disable-next-line react/no-danger
      <div dangerouslySetInnerHTML={{__html: html}} />
    );
  }
});

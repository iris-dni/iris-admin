import * as React from 'react';
import _ from 'lodash';
import authenticated from 'auth';
import PetitionApi from 'petition/api';
import SupporterApi from 'supporter/api';
import Template from './template';

export default authenticated(React.createClass({
  displayName: 'Appendix',

  getInitialState() {
    return {
      petition: {},
      supporters: []
    };
  },

  componentDidMount() {
    const petitionId = _.get(this.props, 'params.id');

    if(petitionId) {
      PetitionApi.get(petitionId, 'owner').then((response) => {
        const petition = _.get(response, 'data', {});

        this.getSupporters(petitionId, _.get(petition, 'supporters.amount', 0), 50).then((responses) => {
          const supporters = [];

          responses.forEach((response) => {
            response.data.forEach((supporter) => {
              const telephone = _.get(supporter, 'phone_user.telephone');
              if(telephone) {
                supporter.phone_user.telephone = this.anonymizeTelephone(telephone, 6);
              }
              supporters.push(supporter);
            });
          });

          this.setState({
            petition: petition,
            supporters: supporters
          });
        });
      });
    }
  },

  getSupporters(petitionId, amount, limit) {
    const requests = [];
    for(let i = 0; i < (amount / limit); i++) {
      requests.push(
        SupporterApi.search({
          petition: petitionId,
          resolve: 'user',
          offset: i * limit,
          limit: limit
        })
      );
    }
    return Promise.all(requests);
  },

  anonymizeTelephone(telephone, visibleCharacters) {
    if(typeof(telephone) === 'string') {
      return telephone.substring(0, visibleCharacters) + telephone.substring(visibleCharacters).replace(/[0-9]/g,'x');
    }
    return telephone;
  },

  render() {
    return (
      <Template url="/templates/appendix.html" context={this.state} />
    );
  }
}));

import * as React from 'react';
import _ from 'lodash';
import moment from 'moment';
import authenticated from '../auth';
import hasAdminAccess from '../auth/has-admin-access';
import Alert from 'components/alert';
import PetitionAdminAPI, { PetitionPublicAPI } from 'petition/api';
import Template from './template';
import { translate } from 'config/strings';

export default authenticated(React.createClass({
  displayName: 'Letter-Cover',

  propTypes: {
    me: React.PropTypes.shape({
      roles: React.PropTypes.arrayOf(React.PropTypes.string)
    }),
    params: React.PropTypes.shape({
      id: React.PropTypes.string.isRequired
    })
  },

  getInitialState() {
    return {
      error: null,
      context: {
        petition: {},
        date: this.getDate()
      }
    };
  },

  componentWillMount() {
    this.getPetition(this.props.params.id);
  },

  getDate() {
    return moment().locale('de').format('LL');
  },

  getPetition(petitionId) {
    if (petitionId) {
      let api = PetitionPublicAPI;

      const { me } = this.props;
      if (hasAdminAccess(me)) {
        api = PetitionAdminAPI;
      }

      api.get(petitionId, 'city,owner').then((response) => {
        const petition = _.get(response, 'data', {});

        this.setState({
          error: null,
          context: {
            petition: petition,
            date: this.getDate()
          }
        });
      }).catch((response) => {
        this.setState({
          error: response.error && response.error.description
        });
      });
    }
  },

  render() {
    const { error, context } = this.state;

    if (error) {
      return (
        <div className="container-fluid">
          <Alert message={error} />
        </div>
      );
    }

    const title = translate('petitions.letter');
    return (
      <Template className="letter-cover" title={title} url="/templates/letter-cover.html" context={context} />
    );
  }
}), true);

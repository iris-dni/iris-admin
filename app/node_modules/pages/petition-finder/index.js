/* eslint-disable react/prop-types, react/no-multi-comp */
import * as React from 'react';
import { withRouter } from 'react-router';
import makePage from 'components/page';
import AutoLoadFinder from 'components/finder/autoload';
import QueryStateContainer from 'helpers/query-state-container';
import RoutingConstants from 'config/routing-constants';
import Petition from 'types/petition';
import PetitionAPI from 'api/petition';


function getData(skip, batchSize, config) {
  const searchParams = Object.assign({
    limit: batchSize,
    offset: skip,
  }, config);
  return PetitionAPI.search(searchParams);
}

/* eslint-disable */
const openPetitionEditor = (id, router) => {
  console.log(`open petition editor for petition #${id}`);
};
/* eslint-enable */

const columns = [
  { label: 'Petition' },
  { label: 'City' },
  { label: 'Owner' },
  { label: 'Supporters' },
  { label: 'Status' }
];


const ItemsTemplate = ({ item, router }) => {
  const petition = Petition(item);
  if (petition && petition.id) {
    return (
      <tr
        style={{ cursor: 'pointer' }}
        onClick={() => openPetitionEditor(petition.id, router)}
      >
        <td>{petition.title}</td>
        <td>{petition.city}</td>
        <td>{petition.owner}</td>
        <td>{petition.supporters.count}</td>
        <td>{petition.state}</td>
      </tr>
    );
  }
  return null;
};

export default withRouter(makePage(React.createClass({
  displayName: 'PetitionFinder',

  render() {
    const { location, router } = this.props;
    return (
      <div className="container-fluid">
        <h1>Petition Finder</h1>
        <AutoLoadFinder
          columns={columns}
          fetchData={getData}
          state={QueryStateContainer(location, router, RoutingConstants.PETITIONS.pathname)}
          itemsTemplate={ItemsTemplate}
          itemsTemplateProps={{ router }}
          searchConfig={[
            {
              name: 'title',
              id: 'titleSearchField',
              addon: 'search',
              type: 'string',
              lg: 3,
              md: 6,
              placeholder: 'Title'
            },
            {
              name: 'city',
              id: 'citySearchField',
              addon: 'search',
              type: 'autocomplete',
              lg: 3,
              md: 6,
              placeholder: 'City',
              autoCompleteStyle: {
                borderRadius: '0 4px 4px 0',
              },
              items: [
                { value: 'aarau', label: 'Aarau' },
                { value: 'aargau', label: 'Aargau' },
                { value: 'altach', label: 'Altach' },
                { value: 'alberschwende', label: 'Alberschwende' },
                { value: 'athen', label: 'Athen' }
              ],
            },
            {
              name: 'status',
              id: 'statusField',
              type: 'multi-select',
              options: [
                { value: 'signable', label: 'Signable' },
                { value: 'active', label: 'Active' },
                { value: 'draft', label: 'Draft' },
                { value: 'winner', label: 'Winner' },
                { value: 'loser', label: 'Loser' },
                { value: 'sendLetter', label: 'Send Letter' },
                { value: 'waitForLetterResponse', label: 'Wait for Letter Response' },
                { value: 'letterResponseArrived', label: 'Letter Response Arrived' },
                { value: 'closed', label: 'Closed' }
              ],
              lg: 6,
            },
            {
              xs: 6,
              name: 'clear-filters',
              label: 'Clear Filters',
              role: 'clear-filters',
            },
            {
              name: 'sort',
              id: 'sortDropdown',
              type: 'options',
              xs: 6,
              pull: 'right',
              options: [
                { value: '', label: 'Sort' },
                { value: 'date', label: 'Date' },
                { value: 'trending', label: 'Trending' },
                { value: 'amount-supporters', label: 'Amount Supporters' }
              ],
            }
          ]}
          uniqueItemProperty="id"
        />
      </div>
    );
  }
})));

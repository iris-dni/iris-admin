import * as React from 'react';
import NavLink from './nav-link';
import Delimiter from './delimiter';
import LogoutNavItem from './logout-nav-item';
import PetitionAPI from 'petition/api';

const predefinedPetitionSearches = [
  {
    id: 'pending',
    label: 'Pending Petition Reviews ($1)',
    state: ['supportable.pending']
  },
  {
    id: 'sendLetter',
    label: 'Pending Petition Letters ($1)',
    state: ['sendLetterRequested']
  },
  {
    id: 'approveLetter',
    label: 'Pending Petition Feedback ($1)',
    state: ['processing.letterResponseArrived']
  }
];

export default React.createClass({
  displayName: 'Sidebar',

  getInitialState: () => ({
    petitionResults: {}
  }),

  componentWillMount() {
    const promises = predefinedPetitionSearches.map(s => (
      PetitionAPI.search({ state: s.state, limit: 0 }))
    );
    Promise.all(promises).then(results => {
      this.setState({ petitionResults: results.map(r => r.total) });
    }).catch((error) => {
      // fail silently, we just lose the amounts in the navigation bar
      // eslint-disable-next-line no-console
      console.warn(error);
    });
  },

  render() {
    const { petitionResults } = this.state;
    return (
      <div className="sidebar">
        <ul style={{ margin: 0, padding: 0, listStyle: 'none' }}>
          <NavLink
            label="Petitions"
            to={{ pathname: '/petitions', query: { state: [] } }}
          >
            {
              predefinedPetitionSearches.map((s, idx) => {
                let amount = '?';
                if (petitionResults && petitionResults.length > idx) {
                  amount = petitionResults[idx];
                }
                return (
                  <NavLink
                    key={s.id}
                    label={s.label.replace('$1', amount)}
                    to={{ pathname: '/petitions', query: { state: s.state } }}
                  />
                );
              })
            }
          </NavLink>
          <NavLink label="Users" to={{ pathname: '/users' }} />
          <NavLink label="Cities" to={{ pathname: '/cities' }} />
          <Delimiter />
          <LogoutNavItem />
        </ul>
      </div>
    );
  }
});

import * as React from 'react';


/**
 * Represents a control that is used to present a collection of items.
 */
export default React.createClass({
  displayName: 'ItemsControl',

  propTypes: {
    /**
     * The array of items that should be rendered by this <ItemsControl />.
     *
     * The items can be of any shape, the used ItemsTemplate is responsible for
     * rendering.
     */
    items: React.PropTypes.arrayOf(React.PropTypes.object).isRequired,

    /**
     * The template used to render each item.
     */
    itemsTemplate: React.PropTypes.func.isRequired,

    /**
     * Properties that should be passed to the itemsTemplate.
     */
    itemsTemplateProps: React.PropTypes.object,

    /**
     * The key of the unique property of each item (e.g. 'id', or 'email').
     */
    uniqueItemProperty: React.PropTypes.string.isRequired,

    /**
     * The used wrapper element. Depends on the environment - in a table 'tbody'
     * should be used as <div> cannot appear as a child of <table>.
     */
    wrapperElement: React.PropTypes.oneOf([ 'tbody', 'div' ]),

    /**
     * Props passed to the wrapperElement.
     */
    wrapperProps: React.PropTypes.object,
  },

  getDefaultProps: () => ({
    wrapperElement: 'div',
  }),

  render() {
    const {
      itemsTemplate: ItemsTemplate,
      itemsTemplateProps,
      uniqueItemProperty,
      wrapperElement,
      wrapperProps,
    } = this.props;

    return React.createElement(wrapperElement, Object.assign({}, wrapperProps),
      this.props.items.map(item => {
        return (
          <ItemsTemplate
            {...itemsTemplateProps}
            key={item[uniqueItemProperty] || '__new'}
            item={item}
          />
        );
      })
    );
  }
});
